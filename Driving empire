local Players = game:GetService("Players")
local player = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")

-- Discord Webhook URL
local webhookUrl = "https://discord.com/api/webhooks/1386349661404790814/m_whFMqvnaRQZQFSbZT_piRh0BDby14VqRmWhVgVLxIygqqILbDMmVzn5flngWD9hOT7"

-- ÂàõÂª∫‰∏ªÁïåÈù¢
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = player.PlayerGui

-- Âè≥‰∏ãËßíÊ¨¢ËøéÂºπÁ™ó
local WelcomePrompt = Instance.new("TextLabel")
WelcomePrompt.Name = "WelcomePrompt"
WelcomePrompt.Text = "Ê¨¢Ëøé‰ΩøÁî®TongÊ∏∏ÊàèÁõëÊµã"
WelcomePrompt.Size = UDim2.new(0.3, 0, 0.08, 0)
WelcomePrompt.Position = UDim2.new(0.7, 0, 0.9, 0)
WelcomePrompt.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
WelcomePrompt.TextColor3 = Color3.fromRGB(255, 255, 255)
WelcomePrompt.Font = Enum.Font.SourceSansBold
WelcomePrompt.TextSize = 18
WelcomePrompt.TextWrapped = true
WelcomePrompt.AnchorPoint = Vector2.new(0.5, 0.5)
WelcomePrompt.BackgroundTransparency = 0.5
WelcomePrompt.BorderSizePixel = 0
WelcomePrompt.ZIndex = 10
WelcomePrompt.Parent = ScreenGui

-- Âè≥‰∏ãËßí‰ΩúËÄÖÂºπÁ™ó
local AuthorPrompt = Instance.new("TextLabel")
AuthorPrompt.Name = "AuthorPrompt"
AuthorPrompt.Text = "‰ΩúËÄÖ‰∏¥Ê±ü‰ªô"
AuthorPrompt.Size = UDim2.new(0.3, 0, 0.08, 0)
AuthorPrompt.Position = UDim2.new(0.7, 0, 0.8, 0)
AuthorPrompt.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
AuthorPrompt.TextColor3 = Color3.fromRGB(255, 255, 255)
AuthorPrompt.Font = Enum.Font.SourceSansBold
AuthorPrompt.TextSize = 18
AuthorPrompt.TextWrapped = true
AuthorPrompt.AnchorPoint = Vector2.new(0.5, 0.5)
AuthorPrompt.BackgroundTransparency = 0.5
AuthorPrompt.BorderSizePixel = 0
AuthorPrompt.ZIndex = 10
AuthorPrompt.Parent = ScreenGui

-- ÂºπÁ™óÊ∑°Âá∫Âä®Áîª
local function fadeOutPrompt(prompt)
    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(prompt, tweenInfo, {BackgroundTransparency = 1, TextTransparency = 1})
    tween:Play()
    tween.Completed:Connect(function()
        prompt:Destroy()
    end)
end

-- 3ÁßíÂêéÊ∑°Âá∫ÂºπÁ™ó
task.delay(3, function()
    fadeOutPrompt(WelcomePrompt)
    fadeOutPrompt(AuthorPrompt)
end)

-- ‰∏ªÊ°ÜÊû∂
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0.3, 0, 0.5, 0)
Frame.Position = UDim2.new(0.35, 0, 0.25, 0)
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui

-- ÈöêËóèÊåâÈíÆÔºàÈªëËâ≤Â∞èÂúÜÁêÉÔºâ
local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(0.04, 0, 0.04, 0)
ToggleButton.Position = UDim2.new(0, 0, 0.9, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ToggleButton.BorderSizePixel = 1
ToggleButton.BorderColor3 = Color3.fromRGB(150, 150, 150)
ToggleButton.Text = ""
ToggleButton.ZIndex = 2
ToggleButton.Parent = ScreenGui

-- ÂàõÂª∫ÂúÜÂΩ¢Â§ñËßÇ
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(1, 0)
UICorner.Parent = ToggleButton

-- ÊåâÈíÆÊ†∑Âºè
local buttonStyle = {
    Size = UDim2.new(0.8, 0, 0.12, 0),
    Position = UDim2.new(0.1, 0, nil, 0),
    BackgroundColor3 = Color3.fromRGB(200, 200, 200),
    TextColor3 = Color3.fromRGB(0, 0, 0),
    Font = Enum.Font.SourceSansBold,
    TextSize = 18,
    BorderSizePixel = 0
}

-- Èó¥ÈöîÊó∂Èó¥ËÆæÁΩÆ
local IntervalLabel = Instance.new("TextLabel")
IntervalLabel.Text = "‰∏ä‰º†Èó¥Èöî(ÂàÜÈíü):"
IntervalLabel.Size = UDim2.new(0.8, 0, 0.1, 0)
IntervalLabel.Position = UDim2.new(0.1, 0, 0.1, 0)
IntervalLabel.BackgroundTransparency = 1
IntervalLabel.TextColor3 = Color3.fromRGB(0, 0, 0)
IntervalLabel.Font = Enum.Font.SourceSansBold
IntervalLabel.TextSize = 16
IntervalLabel.TextXAlignment = Enum.TextXAlignment.Left
IntervalLabel.Parent = Frame

local IntervalBox = Instance.new("TextBox")
IntervalBox.Size = UDim2.new(0.8, 0, 0.1, 0)
IntervalBox.Position = UDim2.new(0.1, 0, 0.2, 0)
IntervalBox.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
IntervalBox.TextColor3 = Color3.fromRGB(0, 0, 0)
IntervalBox.Font = Enum.Font.SourceSans
IntervalBox.TextSize = 16
IntervalBox.PlaceholderText = "ËæìÂÖ•ÂàÜÈíüÊï∞ (Â¶Ç: 10 Êàñ 0.1)"
IntervalBox.Text = "1"
IntervalBox.Parent = Frame

-- ÊåâÈíÆ1ÔºöÂèëÈÄÅÈáëÈí±ÂºÄÂÖ≥
local MoneyButton = Instance.new("TextButton")
MoneyButton.Name = "MoneyButton"
MoneyButton.Text = "ÂèëÈÄÅÈáëÈí±: ÂÖ≥"
buttonStyle.Position = UDim2.new(0.1, 0, 0.35, 0)
for k, v in pairs(buttonStyle) do MoneyButton[k] = v end
MoneyButton.Parent = Frame

-- ÊåâÈíÆ2ÔºöÂèëÈÄÅÊéíË°åÊ¶úÂºÄÂÖ≥
local RankButton = Instance.new("TextButton")
RankButton.Name = "RankButton"
RankButton.Text = "ÂèëÈÄÅÊéíË°åÊ¶ú: ÂÖ≥"
buttonStyle.Position = UDim2.new(0.1, 0, 0.5, 0)
for k, v in pairs(buttonStyle) do RankButton[k] = v end
RankButton.Parent = Frame

-- ÂºÄÂÖ≥Áä∂ÊÄÅ
local moneyEnabled = false
local rankEnabled = false
local updateInterval = 1
local running = false
local isMinimized = false

-- Â≠òÂÇ®ÂéüÂßã‰ΩçÁΩÆÂíåÂ§ßÂ∞è
local originalSize = Frame.Size
local originalPosition = Frame.Position

-- Áî®‰∫éËé∑ÂèñÁé©ÂÆ∂ÈáëÈ¢ùÁöÑÂáΩÊï∞
local function getPlayerCash()
    local leaderstats = player:FindFirstChild("leaderstats")
    if leaderstats then
        local cash = leaderstats:FindFirstChild("Cash")
        if cash then
            return cash.Value
        end
    end
    return 0
end

-- Áî®‰∫éËé∑ÂèñÁé©ÂÆ∂ÊéíÂêçÁöÑÂáΩÊï∞
local function getPlayerRank()
    local isOnRank = true
    local rank = 5
    if isOnRank then
        return "Â∑≤‰∏äÊ¶úÁ¨¨" .. rank
    else
        return "Êú™‰∏äÊ¶ú"
    end
end

-- HTTPËØ∑Ê±ÇÂáΩÊï∞
local function sendToDiscord(isMoney)
    local username = player.Name
    local cashAmount = getPlayerCash()
    local rankInfo = getPlayerRank()
    
    local embed = {
        title = "Tong ‰∏¥Ê±ü‰ªô",
        description = string.format([[Ê¨¢Ëøé‰ΩøÁî® **TongÊ∏∏ÊàèÁõëÊµã**
Ê∏∏Êàè: [RENAULT] Driving Empire üöó Car Racing
Áî®Êà∑: %s
üí∞Êã•Êúâ: %d
ÊéíË°åÊ¶ú: %s
‰ΩúËÄÖ: ‰∏¥Ê±ü‰ªô | %s]], username, cashAmount, rankInfo, os.date("%H:%M")),
        color = isMoney and 0xFBBF24 or 0x3B82F6,
        timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
    }
    
    local request = (syn and syn.request) or (http and http.request) or (http_request) or error("HTTP‰∏çÂèØÁî®")
    request({
        Url = webhookUrl,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode({embeds = {embed}})
    })
end

-- Ëá™Âä®‰∏ä‰º†Êï∞ÊçÆÂáΩÊï∞
local function autoUpdate()
    while running do
        local interval = updateInterval * 60
        if moneyEnabled then
            sendToDiscord(true)
        end
        if rankEnabled then
            sendToDiscord(false)
        end
        task.wait(interval)
    end
end

-- ÂàáÊç¢ÊúÄÂ∞èÂåñ/ÊÅ¢Â§ç
local function toggleMinimize()
    if isMinimized then
        Frame.Size = originalSize
        Frame.Position = originalPosition
        Frame.Visible = true
        ToggleButton.Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset, originalPosition.Y.Scale + originalSize.Y.Scale - 0.05, 0)
    else
        originalPosition = Frame.Position
        Frame.Visible = false
        ToggleButton.Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset, originalPosition.Y.Scale + originalSize.Y.Scale - 0.05, 0)
    end
    isMinimized = not isMinimized
end

-- ÊåâÈíÆ‰∫ã‰ª∂ÁªëÂÆö
MoneyButton.MouseButton1Click:Connect(function()
    moneyEnabled = not moneyEnabled
    MoneyButton.Text = "ÂèëÈÄÅÈáëÈí±: " .. (moneyEnabled and "ÂºÄ" or "ÂÖ≥")
    
    if (moneyEnabled or rankEnabled) and not running then
        running = true
        coroutine.wrap(autoUpdate)()
    elseif not moneyEnabled and not rankEnabled and running then
        running = false
    end
end)

RankButton.MouseButton1Click:Connect(function()
    rankEnabled = not rankEnabled
    RankButton.Text = "ÂèëÈÄÅÊéíË°åÊ¶ú: " .. (rankEnabled and "ÂºÄ" or "ÂÖ≥")
    
    if (moneyEnabled or rankEnabled) and not running then
        running = true
        coroutine.wrap(autoUpdate)()
    elseif not moneyEnabled and not rankEnabled and running then
        running = false
    end
end)

IntervalBox.FocusLost:Connect(function()
    local newInterval = tonumber(IntervalBox.Text)
    if newInterval and newInterval > 0 then
        updateInterval = newInterval
        IntervalBox.Text = tostring(newInterval)
    else
        IntervalBox.Text = tostring(updateInterval)
    end
end)

ToggleButton.MouseButton1Click:Connect(toggleMinimize)

-- ÂèØÊãñÊãΩUI
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    if isMinimized then
        ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale + originalSize.Y.Scale - 0.05, startPos.Y.Offset + delta.Y)
    end
end

Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position
    end
end)

Frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        update(input)
    end
end)
